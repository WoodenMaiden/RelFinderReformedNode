name: Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  set_vars:
    runs-on: ubuntu-latest
    outputs:
      no_v: ${{ steps.set_version.outputs.no_v }}

    steps:
      - name: Set Versions
        uses: actions/github-script@v4
        id: set_version
        with:
          script: |
            const tag = context.ref.substring(10)
            const no_v = tag.replace('v', '')
            core.setOutput('no_v', no_v)

  build-publish:
    runs-on: ubuntu-latest
    needs: set_vars
    steps:
      - uses: actions/checkout@v3

      - name: Setup node js
        uses: actions/setup-node@v3.2.0

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Cache
        uses: actions/cache@v3.0.2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - run: npm ci --ignore-scripts
      - run: npm run build --if-present
      - run: npm test

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.1.1
        with:
          build-args: |
            GIT_VERSION=${{ needs.set_vars.outputs.no_v }}
          push: true
          tags: ghcr.io/woodenmaiden/relfinderreformedapi:${{ needs.set_vars.outputs.no_v }},ghcr.io/woodenmaiden/relfinderreformedapi:latest

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: JEST Tests # Name of the check run which will be created
          path: reports/jest*.xml # Path to test results
          reporter: jest-junit # Format of test results

  helm_release:
    permissions:
      contents: write
    needs: set_vars
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          mark_as_latest: true
